{
    "AccessSettings": {
        "JwtSettings": {
            "IssuerSigningKey": "2ca3fb850dd1412ead7eb252f706f30435ba1d9c6bbc4d449e90e78cc8862657",
            "Issuer": "Enscool",
            "Audience": "Enscool",
//            "ExpiryInSeconds": 3600
            "ExpiryInSeconds": 10
        },
        "RefreshTokenSettings": {
            "ExpiryInMinutes": 1440,
            "Length": 32
        }
    },
    "DatabaseSettings": {
        "ConnectionString": "Host=localhost;Port=5432;Database=EnscoolDB;Username=postgres;Password="
    },
    "StorageSettings": {
        "ConnectionString": "localhost:6379"
    },
    "Serilog": {
        "Using": [
            "Serilog.Sinks.Console",
            "Serilog.Sinks.File",
            "Serilog.Sinks.Seq",
            "Serilog.Expressions",
            "Serilog.Filters.Expressions"
        ],
        "MinimumLevel": {
            "Default": "Information",
            "Override": {
                "Microsoft": "Information",
                "Microsoft.AspNetCore": "Warning",
                "Microsoft.EntityFrameworkCore": "Warning"
            }
        },
        "WriteTo": [
            {
                "Name": "Console",
                "Args": {
                    "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "@l in ['Error', 'Fatal', 'Warning']"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/Error/.json",
                                    "rollingInterval": "Day",
                                    "rollOnFileSizeLimit": true,
                                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "@l in ['Warning']"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/Warnings/.json",
                                    "rollingInterval": "Day",
                                    "rollOnFileSizeLimit": true,
                                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "File",
                "Args": {
                    "path": "Logs/Info/.json",
                    "rollingInterval": "Day",
                    "rollOnFileSizeLimit": true,
                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                }
            },
            {
                "Name": "Seq",
                "Args": {
                    "serverUrl": "http://seqComponent"
                }
            }
        ],
        "Enrich": [
            "FromLogContext"
        ]
    }
}